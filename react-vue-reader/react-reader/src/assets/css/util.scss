$red: #ed424b;

@function pr($px, $base-font-size: 50px) {
  @if (unitless($px)) {
    //@warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels for you";
    @return pr($px + 0px); // That may fail.
  } @else if (unit($px) == rem) {
    @return $px;
  }
  @return ($px / $base-font-size) * 1rem;
}

@mixin ell() {
  overflow: hidden;
  -ms-text-overflow: ellipsis;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin wh($w,$h) {
  width: $w;
  height: $h;
}

@mixin ava($w) {
  width: $w;
  height: $w;
  img {
    width: 100%;
    height: 100%;
  }
}

@mixin dfcc() {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin overhide($n) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $n;
  -webkit-box-orient: vertical;
}

@mixin border-1px($position) {
  position: relative;
  &:after {
    border-top: 1px solid #c8c7cc;
    content: ' ';
    display: block;
    width: 100%;
    position: absolute;
    left: 0;
  }
  @if $position == bottom {
    &:after {
      bottom: 0;
    }
  } @else {
    &:after {
      top:0;
    }
  }

  @media (-webkit-min-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5) {
    &::after {
      -webkit-transform: scaleY(.7);
      -webkit-transform-origin: 0 0;
      transform: scaleY(.7);
    }
    &::after {
      -webkit-transform-origin: left bottom;
    }
  }
  @media (-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2) {
    &::after {
      -webkit-transform: scaleY(.5);
      transform: scaleY(.5);
    }
  }
}